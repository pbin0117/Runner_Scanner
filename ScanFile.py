# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ScanFile.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from MainWindow import MainFileWindow

from PyQt5 import QtCore, QtGui, QtWidgets
from database import Database
from scanner import Scanner
import numpy as np
from pdf2image import convert_from_path
import sys


class ScanFileWindow(QtWidgets.QWidget):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)

        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(50, 40, 241, 91))
        font = QtGui.QFont()
        font.setPointSize(30)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")

        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(110, 350, 131, 41))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        
        # the photo input
        self.photo = PhotoLabel(self.centralwidget)

        self.btn = QtWidgets.QPushButton(self.centralwidget)
        self.btn.clicked.connect(self.open_image)
        self.btn.setGeometry(QtCore.QRect(300, 220, 200, 50))
        self.btn.setObjectName("btn")

        self.sheetSelect = QtWidgets.QComboBox(self.centralwidget)
        self.sheetSelect.setGeometry(QtCore.QRect(300, 370, 221, 17))
        self.sheetSelect.setObjectName("sheet_select")
        self.sheetSelect.addItems(["Test", "One", "Two"])

        self.submitButton = QtWidgets.QPushButton(self.centralwidget)
        self.submitButton.setGeometry(QtCore.QRect(610, 544, 151, 41))
        self.submitButton.setObjectName("pushButton")

        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "Scan File"))
        self.label_2.setText(_translate("MainWindow", "Store to:"))
        self.submitButton.setText(_translate("MainWindow", "Submit!"))
        self.btn.setText(_translate("MainWindow", "Input Image!"))

    def open_image(self, filename=None):
        pdf = False
        if not filename:
            filename, _ = QtWidgets.QFileDialog.getOpenFileName(self, 'Select Photo', QtCore.QDir.currentPath(), 'Images (*.png *.jpg *.pdf)')
            if not filename:
                return
            if filename[-3:] == "pdf":
                pdf = True

            print(filename[-3:])

        if pdf: 
            self.photo.setEmpty()
        else:
            self.photo.setPixmap(QtGui.QPixmap(filename))
        
        if pdf:
            self.imgfile = np.array(convert_from_path(filename)[0])
        else:
            self.imgfile = filename


class PhotoLabel(QtWidgets.QLabel):

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.setAlignment(QtCore.Qt.AlignCenter)
        self.setText('\n\n Drop Image Here \n\n')
        self.setGeometry(QtCore.QRect(100, 160, 111, 161))
        self.setStyleSheet('''
        QLabel {
            border: 4px dashed #aaa;
        }''')
        self.setMaximumSize(QtCore.QSize(111, 161))

    def setPixmap(self, *args, **kwargs):
        super().setPixmap(*args, **kwargs)
        self.setStyleSheet('''
        QLabel {
            border: none;
        }''')

    def setEmpty(self):
        self.setPixmap(QtGui.QPixmap('questionmark.png'))




if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    sys.exit(app.exec_())